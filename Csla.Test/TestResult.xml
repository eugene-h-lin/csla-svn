<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Visual Studio Projects\csla\36m\cslatest\Csla.Test\cslaTestcs.nunit" total="460" failures="1" not-run="0" date="2008-10-23" time="14:36:48">
  <environment nunit-version="2.4.4.0" clr-version="2.0.50727.3053" os-version="Microsoft Windows NT 6.0.6001 Service Pack 1" platform="Win32NT" cwd="C:\Program Files\NUnit 2.4.4\bin" machine-name="ORTH" user="Illiante" user-domain="Orth" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="C:\Visual Studio Projects\csla\36m\cslatest\Csla.Test\cslaTestcs.nunit" success="False" time="74.030" asserts="0">
    <results>
      <test-suite name="C:\Visual Studio Projects\csla\36m\cslatest\Csla.Test\bin\cs\Debug\Csla.Test.dll" success="False" time="74.015" asserts="0">
        <results>
          <test-suite name="Csla" success="False" time="63.394" asserts="0">
            <results>
              <test-suite name="Test" success="False" time="63.389" asserts="0">
                <results>
                  <test-suite name="AppContext" success="True" time="1.224" asserts="0">
                    <results>
                      <test-suite name="AppContextTests" success="True" time="1.221" asserts="0">
                        <results>
                          <test-case name="Csla.Test.AppContext.AppContextTests.ApplicationContextProperties" executed="True" success="True" time="0.011" asserts="2" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.ClearContexts" executed="True" success="True" time="0.135" asserts="8" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.ClientContext" executed="True" success="True" time="0.923" asserts="14" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.DataPortalEvents" executed="True" success="True" time="0.006" asserts="4" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.FailCreateContext" executed="True" success="True" time="0.086" asserts="4" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.FailDeleteContext" executed="True" success="True" time="0.005" asserts="4" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.FailFetchContext" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.FailUpdateContext" executed="True" success="True" time="0.006" asserts="6" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.GlobalContext" executed="True" success="True" time="0.002" asserts="12" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.NoContext" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.SimpleTest" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.TestAppContextAcrossDifferentThreads" executed="True" success="True" time="0.014" asserts="10" />
                          <test-case name="Csla.Test.AppContext.AppContextTests.TestOnDemandContexts" executed="True" success="True" time="0.001" asserts="14" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="AppDomainTests" success="True" time="0.004" asserts="0">
                    <results>
                      <test-suite name="AppDomainTestClass" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="Csla.Test.AppDomainTests.AppDomainTestClass.AppDomainTestIsCalled" executed="True" success="True" time="0.003" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Authorization" success="True" time="0.094" asserts="0">
                    <results>
                      <test-suite name="AuthTests" success="True" time="0.067" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Authorization.AuthTests.TestAuthBeginEditRules" executed="True" success="True" time="0.036" asserts="19" />
                          <test-case name="Csla.Test.Authorization.AuthTests.TestAuthCloneRules" executed="True" success="True" time="0.004" asserts="13" />
                          <test-case name="Csla.Test.Authorization.AuthTests.TestAuthExecute" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="Csla.Test.Authorization.AuthTests.TestAuthorizationAfterEditCycle" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="Csla.Test.Authorization.AuthTests.TestAuthorizedAccess" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.Authorization.AuthTests.TestUnAuthExecute" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="Csla.Test.Authorization.AuthTests.TestUnauthorizedAccessToGet" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Csla.Test.Authorization.AuthTests.TestUnauthorizedAccessToSet" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="PerTypeAuthorizationTests" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Authorization.PerTypeAuthorizationTests.DenyWritePerInstance" executed="True" success="True" time="0.009" asserts="0" />
                          <test-case name="Csla.Test.Authorization.PerTypeAuthorizationTests.DenyWritePerType" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="ReadonlyAuthorizationTests" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Authorization.ReadonlyAuthorizationTests.TestAllowInstanceAndShared" executed="True" success="True" time="0.007" asserts="6" />
                          <test-case name="Csla.Test.Authorization.ReadonlyAuthorizationTests.TestDenyInstanceAndShared" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.Authorization.ReadonlyAuthorizationTests.TestDenyInstanceAndSharedForClone" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Basic" success="True" time="6.963" asserts="0">
                    <results>
                      <test-suite name="BasicTests" success="True" time="0.138" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Basic.BasicTests.AddChild" executed="True" success="True" time="0.024" asserts="2" />
                          <test-case name="Csla.Test.Basic.BasicTests.AddGrandChild" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="Csla.Test.Basic.BasicTests.AddRemoveAddChild" executed="True" success="True" time="0.043" asserts="2" />
                          <test-case name="Csla.Test.Basic.BasicTests.AddRemoveChild" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.Basic.BasicTests.AddRemoveGrandChild" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.Basic.BasicTests.BasicEquality" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="Csla.Test.Basic.BasicTests.ChildEquality" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="Csla.Test.Basic.BasicTests.ClearChildList" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="Csla.Test.Basic.BasicTests.CreateGenRoot" executed="True" success="True" time="0.006" asserts="6" />
                          <test-case name="Csla.Test.Basic.BasicTests.CreateRoot" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="Csla.Test.Basic.BasicTests.DeletedListTest" executed="True" success="True" time="0.013" asserts="4" />
                          <test-case name="Csla.Test.Basic.BasicTests.DeletedListTestWithCancel" executed="True" success="True" time="0.005" asserts="6" />
                          <test-case name="Csla.Test.Basic.BasicTests.NestedAddAcceptchild" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.Basic.BasicTests.NestedAddDeleteAcceptChild" executed="True" success="True" time="0.003" asserts="7" />
                          <test-case name="Csla.Test.Basic.BasicTests.TestCommandBase" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.Basic.BasicTests.TestNameValueList" executed="True" success="True" time="0.006" asserts="2" />
                          <test-case name="Csla.Test.Basic.BasicTests.TestNotUndoableField" executed="True" success="True" time="0.005" asserts="2" />
                          <test-case name="Csla.Test.Basic.BasicTests.TestReadOnlyList" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="CollectionTests" success="True" time="6.821" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Basic.CollectionTests.DoubleAdd" executed="True" success="True" time="0.111" asserts="1" />
                          <test-case name="Csla.Test.Basic.CollectionTests.IndexOnBusinessListBaseWorks" executed="True" success="True" time="3.341" asserts="2" />
                          <test-case name="Csla.Test.Basic.CollectionTests.IndexOnReadOnlyWorks" executed="True" success="True" time="3.141" asserts="2" />
                          <test-case name="Csla.Test.Basic.CollectionTests.QueryOnIndexedFieldThatCantUseIndexWorks" executed="True" success="True" time="0.119" asserts="1" />
                          <test-case name="Csla.Test.Basic.CollectionTests.QueryWithComplexWhere" executed="True" success="True" time="0.045" asserts="2" />
                          <test-case name="Csla.Test.Basic.CollectionTests.RootListGetRuleDescriptions" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Csla.Test.Basic.CollectionTests.SetLast" executed="True" success="True" time="0.006" asserts="3" />
                          <test-case name="Csla.Test.Basic.CollectionTests.TestRangedWhereGreaterThan" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Csla.Test.Basic.CollectionTests.TestRangedWhereGreaterThanOrEqualTo" executed="True" success="True" time="0.009" asserts="1" />
                          <test-case name="Csla.Test.Basic.CollectionTests.TestRangedWhereLessThan" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Csla.Test.Basic.CollectionTests.TestRangedWhereLessThanOrEqualTo" executed="True" success="True" time="0.003" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="BypassPropertyChecks" success="True" time="0.041" asserts="0">
                    <results>
                      <test-suite name="BypassPropertyChecksTests" success="True" time="0.041" asserts="0">
                        <results>
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassFactory" executed="True" success="True" time="0.018" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadNoRightsDoNotBypass" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadNoRightsDoNotBypassBackingField" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadWriteNoRights" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadWriteNoRightsBackingField" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadWriteNoRightsTurnNotificationBackOn" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadWriteWithRights" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadWriteWithRightsBackingField" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassReadWriteWithRightsTurnNotificationBackOn" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassWriteNoRightsDoNotBypass" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.BypassPropertyChecks.BypassPropertyChecksTests.TestBypassWriteNoRightsDoNotBypassBackingField" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ChildrenByInterface" success="True" time="0.004" asserts="0">
                    <results>
                      <test-suite name="ChildInterfaceTests" success="True" time="0.003" asserts="0">
                        <results>
                          <test-case name="Csla.Test.ChildrenByInterface.ChildInterfaceTests.AddItems" executed="True" success="True" time="0.003" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="CslaQueryProvider" success="True" time="0.641" asserts="0">
                    <results>
                      <test-suite name="CslaQueryProviderTests" success="True" time="0.640" asserts="0">
                        <results>
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestMaxWithDateParameter" executed="True" success="True" time="0.035" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderAny" executed="True" success="True" time="0.015" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderAnyOnEmpty" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderAverageWithCriteria" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderCast" executed="True" success="True" time="0.012" asserts="3" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderCastFrom" executed="True" success="True" time="0.033" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderConcat" executed="True" success="True" time="0.023" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderContains" executed="True" success="True" time="0.010" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderCount" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderCountWithCriteria" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderDefaultIfEmpty" executed="True" success="True" time="0.013" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderDistinct" executed="True" success="True" time="0.013" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderElementAt" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderElementAtOrDefault" executed="True" success="True" time="0.006" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderExcept" executed="True" success="True" time="0.014" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderFirst" executed="True" success="True" time="0.013" asserts="3" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderFirstOrDefault" executed="True" success="True" time="0.007" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderGroupBy" executed="True" success="True" time="0.037" asserts="4" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderGroupJoin" executed="True" success="True" time="0.099" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderIntersect" executed="True" success="True" time="0.013" asserts="4" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderJoin" executed="True" success="True" time="0.020" asserts="4" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderLast" executed="True" success="True" time="0.011" asserts="3" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderLastOrDefault" executed="True" success="True" time="0.008" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderLongCount" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderMax" executed="True" success="True" time="0.005" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderMin" executed="True" success="True" time="0.006" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderOfType" executed="True" success="True" time="0.011" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderOrderBy" executed="True" success="True" time="0.014" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderOrderByDescending" executed="True" success="True" time="0.005" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderReverse" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSelectMany" executed="True" success="True" time="0.011" asserts="0" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSelectProjection" executed="True" success="True" time="0.010" asserts="49" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSelectProjectionWithSerialization" executed="True" success="True" time="0.011" asserts="33" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSequenceEqual" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSingle" executed="True" success="True" time="0.007" asserts="3" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSingleOrDefault" executed="True" success="True" time="0.006" asserts="3" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSkip" executed="True" success="True" time="0.008" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSkipWhile" executed="True" success="True" time="0.010" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderSum" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderTake" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderTakeWhile" executed="True" success="True" time="0.009" asserts="3" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestQueryProviderUnion" executed="True" success="True" time="0.012" asserts="1" />
                          <test-case name="Csla.Test.CslaQueryProvider.CslaQueryProviderTests.TestViewSyncronization" executed="True" success="True" time="0.018" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Data" success="True" time="17.738" asserts="0">
                    <results>
                      <test-suite name="ContextTests" success="True" time="17.736" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Data.ContextTests.ConnectionSetting_with_Invalid_DB_Throws_ConfigurationErrorsException_for_EntitiesContextDataContext" executed="True" success="True" time="10.496" asserts="1" />
                          <test-case name="Csla.Test.Data.ContextTests.ConnectionSetting_with_Invalid_DB_Throws_ConfigurationErrorsException_for_LinqToSqlContextDataContext" executed="True" success="True" time="0.146" asserts="1" />
                          <test-case name="Csla.Test.Data.ContextTests.ConnectionSetting_with_Invalid_DB_Throws_ConfigurationErrorsException_for_SqlConnection" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="Csla.Test.Data.ContextTests.ExecuteReader_on_Table2_returns_reader_with_3_fields" executed="True" success="True" time="1.815" asserts="2" />
                          <test-case name="Csla.Test.Data.ContextTests.InvalidConnectionSetting_Throws_ConfigurationErrorsException_for_EntitiesContextDataContext" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.Data.ContextTests.InvalidConnectionSetting_Throws_ConfigurationErrorsException_for_LinqToSqlContextDataContext" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.Data.ContextTests.InvalidConnectionSetting_Throws_ConfigurationErrorsException_for_SqlConnection" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.Data.ContextTests.Table1_retreived_through_LingToSqlDataContext_has_records" executed="True" success="True" time="0.586" asserts="2" />
                          <test-case name="Csla.Test.Data.ContextTests.Table2_retreived_through_LingToEntitiesDataContext_has_records" executed="True" success="True" time="3.747" asserts="2" />
                          <test-case name="Csla.Test.Data.ContextTests.TestTransactionsManaagerConnectionProperty" executed="True" success="True" time="0.020" asserts="3" />
                          <test-case name="Csla.Test.Data.ContextTests.Using_TransactionManager_Insert_2records_increases_count_by2_then_removing_them_decreases_count_by2" executed="True" success="True" time="0.539" asserts="4" />
                          <test-case name="Csla.Test.Data.ContextTests.Using_TransactionManager_Insert_of_2records_rolls_back_if_second_record_fails_insert" executed="True" success="True" time="0.351" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DataMapper" success="True" time="0.380" asserts="0">
                    <results>
                      <test-suite name="DataMapperTests" success="True" time="0.379" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.BasicDataMap" executed="True" success="True" time="0.018" asserts="7" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.BooleanTypes" executed="True" success="True" time="0.001" asserts="4" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.DateTimeTypes" executed="True" success="True" time="0.158" asserts="3" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.EnumTypes" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.GuidTypes" executed="True" success="True" time="0.002" asserts="3" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.NullableTypes" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.NumericTypes" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.SetFields" executed="True" success="True" time="0.061" asserts="7" />
                          <test-case name="Csla.Test.DataMapper.DataMapperTests.SmartDateTypes" executed="True" success="True" time="0.003" asserts="6" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DataPortal" success="True" time="0.323" asserts="0">
                    <results>
                      <test-suite name="AsynchDataPortalTest" success="True" time="0.154" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginCreate_overload_with_UserState_and_Criteria_passed_Results_in_UserState_and_Id_set" executed="True" success="True" time="0.025" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginCreate_overload_with_UserState_passed_Results_in_UserState_set_and_Id_defaulted_to_0" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginCreate_overload_without_parameters_Results_in_UserState_defaulted_to_Null_and_Id_to_0" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginCreate_with_SingleCriteria_Calling_BO_Without_DP_CREATE_Returns_no_Error_info" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginFetch_overload_with_Crieria_only_passed_Results_in_UserState_defaulted_to_Null_and_Id_set" executed="True" success="True" time="0.009" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginFetch_overload_without_Parameters_Results_in_UserState_defaulted_to_Null_and_Id_to_0" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginFetch_with_Criteria_and_UserState_passed_Results_in_UserState_and_Id_set" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_called_on_DeletedObject_without_UserState_results_in_UserState_defaulted_to_Null_server" executed="True" success="True" time="0.022" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_DeletedObject_with_UserState_results_in_UserState_set_on_server" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_FetchedObject_with_UserState_results_in_UserState_set_and_MethodCalled_Updated" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_FetchedObject_without_parameters_Results_in_UserState_defaulted_to_Null_and_MethodCalled_Updated" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_NewObject_with_callback_parameter_set_Results_in_UserState_defaulted_to_Null_and_id_to_0_and_MethodCalled_Inserted" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_NewObject_with_ForceUpdate_callback_and_UserState_Parameters_set_Results_in_those_params_set_on_server" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_NewObject_with_UserState_and_calllback_Results_in_UserState_set_and_MethodCalled_Inserted" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_NewObject_with_UserState_parameter_set_Results_in_UserState_set_and_MethodCalled_Inserted" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.BeginSave_overload_called_on_NewObject_without_parameters_Results_in_UserState_dafaulted_to_Null_and_MethodCalled_Inserted" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.Delete_called_with_UserState_results_in_UserState_set_on_server" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.Delete_called_without_UserState_results_in_UserState_defaulted_to_Null_server" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.ExecuteCommand_called_with_UserState_results_in_UserState_set_on_server" executed="True" success="True" time="0.007" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AsynchDataPortalTest.ExecuteCommand_called_without_UserState_results_in_UserState_defaulted_to_Null_server" executed="True" success="True" time="0.003" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="AuthorizeDataPortalTests" success="True" time="0.067" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.DataPortal_Create_Calls_IAuthorizeDataPortal_Authorize_WithCorrectParameters" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.DataPortal_Delete_Calls_IAuthorizeDataPortal_Authorize_WithCorrectParameters" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.DataPortal_Fetch_Calls_IAuthorizeDataPortal_Authorize_WithCorrectParameters" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.DataPortal_Update_Calls_IAuthorizeDataPortal_Authorize_WithCorrectParameters" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfAuthorizationProvider_SetInConfigFile_DataPortal_Instantiates_AuthorizationProviderType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfAuthProviderTypeDoesNotImplement_IAuthorizeDataPortal_ThenThrow_ArgumentException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfAuthProviderTypeImplements_IAuthorizeDataPortal_Then_authorizerFieldShouldBeAnInstanceOfThatType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfAuthProviderTypeIsNull_ThenThrow_ArgumentNullException" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfCslaAuthorizationProviderAppSetting_DoesNotExist_ThenUse_NullAuthorizationProvider" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfCslaAuthorizationProviderAppSetting_HoldsEmptyString_ThenUse_NullAuthorizationProvider" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfCslaAuthorizationProviderAppSetting_HoldsInvalidType_ThenThrow_TypeLoadException" executed="True" success="True" time="0.043" asserts="0" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfCslaAuthorizationProviderAppSetting_HoldsValidType_Then_authorizerFieldShouldHoldThatType" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortal.AuthorizeDataPortalTests.IfCslaAuthorizationProviderAppSettingName_IsNull_ThenThrow_ArgumentNullException" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="DataPortalTests" success="True" time="0.096" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortal.DataPortalTests.CallDataPortalOverrides" executed="True" success="True" time="0.013" asserts="26" />
                          <test-case name="Csla.Test.DataPortal.DataPortalTests.DataPortalEvents" executed="True" success="True" time="0.002" asserts="4" />
                          <test-case name="Csla.Test.DataPortal.DataPortalTests.StronglyTypedDataPortalMethods" executed="True" success="True" time="0.003" asserts="7" />
                          <test-case name="Csla.Test.DataPortal.DataPortalTests.TestEnterpriseServicesTransactionalUpdate" executed="True" success="True" time="0.050" asserts="3" />
                          <test-case name="Csla.Test.DataPortal.DataPortalTests.TestTransactionScopeUpdate" executed="True" success="True" time="0.020" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DataPortalChild" success="True" time="0.042" asserts="0">
                    <results>
                      <test-suite name="DataPortalChildTests" success="True" time="0.041" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortalChild.DataPortalChildTests.CreateAndDeleteChild" executed="True" success="True" time="0.011" asserts="7" />
                          <test-case name="Csla.Test.DataPortalChild.DataPortalChildTests.CreateAndSaveChild" executed="True" success="True" time="0.003" asserts="9" />
                          <test-case name="Csla.Test.DataPortalChild.DataPortalChildTests.FetchAndDeleteChild" executed="True" success="True" time="0.001" asserts="10" />
                          <test-case name="Csla.Test.DataPortalChild.DataPortalChildTests.FetchAndSaveChild" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="Csla.Test.DataPortalChild.DataPortalChildTests.FetchAndSaveChildList" executed="True" success="True" time="0.017" asserts="12" />
                          <test-case name="Csla.Test.DataPortalChild.DataPortalChildTests.FetchAndSaveChildListVerifyParent" executed="True" success="True" time="0.002" asserts="14" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DataPortalTest" success="True" time="0.089" asserts="0">
                    <results>
                      <test-suite name="LegacySplitTest" success="True" time="0.017" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortalTest.LegacySplitTest.TestDpCreate" executed="True" success="True" time="0.003" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacySplitTest.TestDpDelete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacySplitTest.TestDpDeleteSelf" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacySplitTest.TestDpFetch" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacySplitTest.TestDpInsert" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacySplitTest.TestDpUpdate" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="LegacyTest" success="True" time="0.014" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortalTest.LegacyTest.TestDpCreate" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacyTest.TestDpDelete" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacyTest.TestDpDeleteSelf" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacyTest.TestDpFetch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacyTest.TestDpInsert" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.LegacyTest.TestDpUpdate" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SingleOverloadTest" success="True" time="0.009" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortalTest.SingleOverloadTest.TestDpCreate" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleOverloadTest.TestDpCreateWithCriteria" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleOverloadTest.TestDpDelete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleOverloadTest.TestDpFetch" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SingleTest" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortalTest.SingleTest.TestDpCreate" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleTest.TestDpDelete" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleTest.TestDpDeleteSelf" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleTest.TestDpFetch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleTest.TestDpInsert" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SingleTest.TestDpUpdate" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SplitOverloadTest" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortalTest.SplitOverloadTest.TestDpCreate" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitOverloadTest.TestDpCreateWithCriteria" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitOverloadTest.TestDpDelete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitOverloadTest.TestDpFetch" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="SplitTest" success="True" time="0.018" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DataPortalTest.SplitTest.TestDpCreate" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitTest.TestDpDelete" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitTest.TestDpDeleteSelf" executed="True" success="True" time="0.005" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitTest.TestDpFetch" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitTest.TestDpInsert" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.DataPortalTest.SplitTest.TestDpUpdate" executed="True" success="True" time="0.002" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DPException" success="True" time="0.039" asserts="0">
                    <results>
                      <test-suite name="DataPortalExceptionTests" success="True" time="0.038" asserts="0">
                        <results>
                          <test-case name="Csla.Test.DPException.DataPortalExceptionTests.CheckInnerExceptionsOnDelete" executed="True" success="True" time="0.003" asserts="5" />
                          <test-case name="Csla.Test.DPException.DataPortalExceptionTests.CheckInnerExceptionsOnFetch" executed="True" success="True" time="0.002" asserts="5" />
                          <test-case name="Csla.Test.DPException.DataPortalExceptionTests.CheckInnerExceptionsOnSave" executed="True" success="True" time="0.032" asserts="7" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="EditableRootList" success="True" time="0.025" asserts="0">
                    <results>
                      <test-suite name="EditableRootListTests" success="True" time="0.024" asserts="0">
                        <results>
                          <test-case name="Csla.Test.EditableRootList.EditableRootListTests.AddItem" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="Csla.Test.EditableRootList.EditableRootListTests.BusyImplemented" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.EditableRootList.EditableRootListTests.ErrorRecoveryTest" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="Csla.Test.EditableRootList.EditableRootListTests.InsertItem" executed="True" success="True" time="0.008" asserts="4" />
                          <test-case name="Csla.Test.EditableRootList.EditableRootListTests.RemoveNewItem" executed="True" success="True" time="0.002" asserts="6" />
                          <test-case name="Csla.Test.EditableRootList.EditableRootListTests.RemoveOldItem" executed="True" success="True" time="0.003" asserts="6" />
                          <test-case name="Csla.Test.EditableRootList.EditableRootListTests.UpdateItem" executed="True" success="True" time="0.002" asserts="8" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="IdentityConverter" success="True" time="0.013" asserts="0">
                    <results>
                      <test-suite name="IdentityConverterTests" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="Csla.Test.IdentityConverter.IdentityConverterTests.ConvertBackObjRef" executed="True" success="True" time="0.007" asserts="1" />
                          <test-case name="Csla.Test.IdentityConverter.IdentityConverterTests.ConvertBackValue" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.IdentityConverter.IdentityConverterTests.ConvertObjRef" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.IdentityConverter.IdentityConverterTests.ConvertValue" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="IO" success="True" time="0.033" asserts="0">
                    <results>
                      <test-suite name="DPMethodOverloadTests" success="True" time="0.018" asserts="0">
                        <results>
                          <test-case name="Csla.Test.IO.DPMethodOverloadTests.CreateNoCriteria" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.IO.DPMethodOverloadTests.CreateWithCriteria" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Csla.Test.IO.DPMethodOverloadTests.CreateWithOtherCriteria" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.IO.DPMethodOverloadTests.FetchNoCriteria" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Csla.Test.IO.DPMethodOverloadTests.FetchNullCriteria" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.IO.DPMethodOverloadTests.FetchWithCriteria" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.IO.DPMethodOverloadTests.FetchWithOtherCriteria" executed="True" success="True" time="0.001" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="IOTests" success="True" time="0.012" asserts="0">
                        <results>
                          <test-case name="Csla.Test.IO.IOTests.DeleteNewRoot" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="Csla.Test.IO.IOTests.DeleteOldRoot" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="Csla.Test.IO.IOTests.DeleteRootImmediate" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Csla.Test.IO.IOTests.LoadRoot" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="Csla.Test.IO.IOTests.SaveNewRoot" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="Csla.Test.IO.IOTests.SaveOldRoot" executed="True" success="True" time="0.002" asserts="9" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="LazyLoad" success="True" time="0.017" asserts="0">
                    <results>
                      <test-suite name="LazyLoadTests" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Csla.Test.LazyLoad.LazyLoadTests.NewChildEditLevel" executed="True" success="True" time="0.007" asserts="9" />
                          <test-case name="Csla.Test.LazyLoad.LazyLoadTests.NewChildEditLevelApply" executed="True" success="True" time="0.001" asserts="9" />
                          <test-case name="Csla.Test.LazyLoad.LazyLoadTests.NewChildEditLevelCancel" executed="True" success="True" time="0.002" asserts="8" />
                          <test-case name="Csla.Test.LazyLoad.LazyLoadTests.NullApplyEdit" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Csla.Test.LazyLoad.LazyLoadTests.NullCancelEdit" executed="True" success="True" time="0.002" asserts="7" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="LogicalExecutionLocation" success="True" time="0.012" asserts="0">
                    <results>
                      <test-suite name="LogicalExecutionLocationTests" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="Csla.Test.LogicalExecutionLocation.LogicalExecutionLocationTests.TestLogicalExecutionLocation" executed="True" success="True" time="0.010" asserts="3" />
                          <test-case name="Csla.Test.LogicalExecutionLocation.LogicalExecutionLocationTests.TestRulesLogicalExecutionLocation" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="MethodCaller" success="True" time="0.016" asserts="0">
                    <results>
                      <test-suite name="MethodCallerTests" success="True" time="0.015" asserts="0">
                        <results>
                          <test-case name="Csla.Test.MethodCaller.MethodCallerTests.CallException" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="Csla.Test.MethodCaller.MethodCallerTests.CallInnerException" executed="True" success="True" time="0.003" asserts="3" />
                          <test-case name="Csla.Test.MethodCaller.MethodCallerTests.CallSuccess" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Csla.Test.MethodCaller.MethodCallerTests.CallSuccessArrayParameters" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="Csla.Test.MethodCaller.MethodCallerTests.CallSuccessInheritedMethods" executed="True" success="True" time="0.002" asserts="6" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Nullable" success="True" time="0.013" asserts="0">
                    <results>
                      <test-suite name="NullableTests" success="True" time="0.011" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Nullable.NullableTests.TestNullableAfterClone" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="Csla.Test.Nullable.NullableTests.TestNullableAfterEditCycle" executed="True" success="True" time="0.003" asserts="6" />
                          <test-case name="Csla.Test.Nullable.NullableTests.TestNullableField" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.Nullable.NullableTests.TestNullableProperty" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ObjectFactory" success="False" time="7.963" asserts="0">
                    <results>
                      <test-suite name="ObjectFactoryTests" success="False" time="7.961" asserts="0">
                        <results>
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.Create" executed="True" success="True" time="0.674" asserts="4" />
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.CreateLocal" executed="True" success="True" time="0.006" asserts="4" />
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.CreateMissing" executed="True" success="True" time="0.545" asserts="4" />
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.Delete" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.FetchCriteria" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.FetchNoCriteria" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.Update" executed="True" success="True" time="0.007" asserts="4" />
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.UpdateEnterpriseServices" executed="True" success="False" time="6.683" asserts="0">
                            <failure>
                              <message><![CDATA[Csla.DataPortalException : DataPortal.Update failed (System.EnterpriseServices.RegistrationException: Failed to register assembly 'Csla, Version=3.6.0.0, Culture=neutral, PublicKeyToken=93be5fdc093e4c30'. ---> System.UnauthorizedAccessException: Access to the registry key 'HKEY_CLASSES_ROOT\Csla.Server.ServicedDataPortal' is denied.
   at Microsoft.Win32.RegistryKey.Win32Error(Int32 errorCode, String str)
   at Microsoft.Win32.RegistryKey.CreateSubKey(String subkey, RegistryKeyPermissionCheck permissionCheck, RegistrySecurity registrySecurity)
   at Microsoft.Win32.RegistryKey.CreateSubKey(String subkey)
   at System.Runtime.InteropServices.RegistrationServices.RegisterManagedType(Type type, String strAsmName, String strAsmVersion, String strAsmCodeBase, String strRuntimeVersion)
   at System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)
   at System.EnterpriseServices.RegistrationDriver.ClassicRegistration(Assembly asm)
   --- End of inner exception stack trace ---
   at System.EnterpriseServices.RegistrationDriver.ClassicRegistration(Assembly asm)
   at System.EnterpriseServices.RegistrationDriver.InstallAssembly(RegistrationConfig regConfig, Object obSync))
  ----> System.EnterpriseServices.RegistrationException : You must have administrative credentials to perform this task. Contact your system administrator for assistance.
  ----> System.EnterpriseServices.RegistrationException : Failed to register assembly 'Csla, Version=3.6.0.0, Culture=neutral, PublicKeyToken=93be5fdc093e4c30'.
  ----> System.UnauthorizedAccessException : Access to the registry key 'HKEY_CLASSES_ROOT\Csla.Server.ServicedDataPortal' is denied.]]></message>
                              <stack-trace><![CDATA[   at System.EnterpriseServices.RegistrationDriver.InstallAssembly(RegistrationConfig regConfig, Object obSync)
   at System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig& regConfig)
   at System.EnterpriseServices.RegistrationHelper.InstallAssembly(String assembly, String& application, String partition, String& tlb, InstallationFlags installFlags)
   at System.EnterpriseServices.RegistrationHelper.System.EnterpriseServices.Thunk.IThunkInstallation.DefaultInstall(String asm)
   at System.EnterpriseServices.Thunk.Proxy.RegisterAssembly(Assembly assembly)
   at System.EnterpriseServices.Thunk.Proxy.LazyRegister(Guid id, Type serverType, Boolean checkCache)
   at System.EnterpriseServices.Thunk.Proxy.CoCreateObject(Type serverType, Boolean bQuerySCInfo, Boolean& bIsAnotherProcess, String& uri)
   at System.EnterpriseServices.ServicedComponentProxyAttribute.CreateInstance(Type serverType)
   at System.Runtime.Remoting.Activation.ActivationServices.IsCurrentContextOK(Type serverType, Object[] props, Boolean bNewObj)
   at Csla.Server.DataPortal.Update(Object obj, DataPortalContext context) in C:\Visual Studio Projects\csla\36m\cslacs\Csla\Server\DataPortal.cs:line 262
   at Csla.DataPortal.Update(Object obj) in C:\Visual Studio Projects\csla\36m\cslacs\Csla\DataPortal.cs:line 476
   at Csla.DataPortal.Update[T](T obj) in C:\Visual Studio Projects\csla\36m\cslacs\Csla\DataPortal.cs:line 336
   at Csla.Test.ObjectFactory.ObjectFactoryTests.UpdateEnterpriseServices() in C:\Visual Studio Projects\csla\36m\cslatest\Csla.Test\ObjectFactory\ObjectFactoryTests.cs:line 131
--RegistrationException
   at System.EnterpriseServices.RegistrationDriver.InstallAssembly(RegistrationConfig regConfig, Object obSync)
   at System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig& regConfig)
   at System.EnterpriseServices.RegistrationHelper.InstallAssembly(String assembly, String& application, String partition, String& tlb, InstallationFlags installFlags)
   at System.EnterpriseServices.RegistrationHelper.System.EnterpriseServices.Thunk.IThunkInstallation.DefaultInstall(String asm)
   at System.EnterpriseServices.Thunk.Proxy.RegisterAssembly(Assembly assembly)
   at System.EnterpriseServices.Thunk.Proxy.LazyRegister(Guid id, Type serverType, Boolean checkCache)
   at System.EnterpriseServices.Thunk.Proxy.CoCreateObject(Type serverType, Boolean bQuerySCInfo, Boolean& bIsAnotherProcess, String& uri)
   at System.EnterpriseServices.ServicedComponentProxyAttribute.CreateInstance(Type serverType)
   at System.Runtime.Remoting.Activation.ActivationServices.IsCurrentContextOK(Type serverType, Object[] props, Boolean bNewObj)
   at Csla.Server.DataPortal.Update(Object obj, DataPortalContext context) in C:\Visual Studio Projects\csla\36m\cslacs\Csla\Server\DataPortal.cs:line 262
--RegistrationException
   at System.EnterpriseServices.RegistrationDriver.ClassicRegistration(Assembly asm)
   at System.EnterpriseServices.RegistrationDriver.InstallAssembly(RegistrationConfig regConfig, Object obSync)
--UnauthorizedAccessException
   at Microsoft.Win32.RegistryKey.Win32Error(Int32 errorCode, String str)
   at Microsoft.Win32.RegistryKey.CreateSubKey(String subkey, RegistryKeyPermissionCheck permissionCheck, RegistrySecurity registrySecurity)
   at Microsoft.Win32.RegistryKey.CreateSubKey(String subkey)
   at System.Runtime.InteropServices.RegistrationServices.RegisterManagedType(Type type, String strAsmName, String strAsmVersion, String strAsmCodeBase, String strRuntimeVersion)
   at System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)
   at System.EnterpriseServices.RegistrationDriver.ClassicRegistration(Assembly asm)
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="Csla.Test.ObjectFactory.ObjectFactoryTests.UpdateTransactionScope" executed="True" success="True" time="0.006" asserts="4" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="PropertyGetSet" success="True" time="0.597" asserts="0">
                    <results>
                      <test-suite name="PropertyGetSetTests" success="True" time="0.596" asserts="0">
                        <results>
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.ExplicitFieldProperties" executed="True" success="True" time="0.013" asserts="10" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.FieldDirty" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.If_FieldBackedString_Changes_On_GrandChild_Then_ChildChanged_Fires_On_GrandChild_Child_and_Root" executed="True" success="True" time="0.014" asserts="5" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.If_FieldBackedString_Is_Changed_On_GrandChild_List_Item_After_Root_Is_Deserialized_Then_Root_ChildChanged_Event_Fires" executed="True" success="True" time="0.453" asserts="1" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.If_FieldBackedString_Property_Changes_On_Item_In_ManagedChildList_Then_ChildChanged_Fires_On_Root_And_On_ManagedChildList" executed="True" success="True" time="0.001" asserts="2" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.If_FieldBackedString_Property_Changes_On_ManagedChild_Then_ChildChanged_Should_Fire_On_Root_ButNot_On_ManagedChild" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.If_FieldBackedString_Property_Is_Changed_On_Child_After_CancelEdit_Then_ChildChanged_Fires_On_Root" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.If_ManagedStringField_Property_Changes_ChildChanged_Event_Should_Not_Fire" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.LoadNullProperty" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.ManagedFieldBaseProperties" executed="True" success="True" time="0.005" asserts="9" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.ManagedFieldProperties" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.MarkClean" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.PropertyNotRegistered" executed="True" success="True" time="0.034" asserts="0" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.RootChildListUndoApply" executed="True" success="True" time="0.017" asserts="13" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.RootChildListUndoCancel" executed="True" success="True" time="0.001" asserts="11" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.RootChildUndoApply" executed="True" success="True" time="0.002" asserts="9" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.RootChildUndoCancel" executed="True" success="True" time="0.001" asserts="8" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.RootChildUndoCancelIsDirty" executed="True" success="True" time="0.001" asserts="5" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.RootUndoApply" executed="True" success="True" time="0.001" asserts="12" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.RootUndoCancel" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.SerializedEditLevel" executed="True" success="True" time="0.002" asserts="10" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.SerializedExplicitFieldProperties" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.SerializedManagedFieldProperties" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.SerializedSimpleChildProperties" executed="True" success="True" time="0.001" asserts="6" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.SimpleChildProperties" executed="True" success="True" time="0.001" asserts="7" />
                          <test-case name="Csla.Test.PropertyGetSet.PropertyGetSetTests.SmartDateProperties" executed="True" success="True" time="0.011" asserts="5" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="RollBack" success="True" time="0.024" asserts="0">
                    <results>
                      <test-suite name="RollBackTests" success="True" time="0.023" asserts="0">
                        <results>
                          <test-case name="Csla.Test.RollBack.RollBackTests.EditParentEntity" executed="True" success="True" time="0.009" asserts="3" />
                          <test-case name="Csla.Test.RollBack.RollBackTests.NoFail" executed="True" success="True" time="0.007" asserts="11" />
                          <test-case name="Csla.Test.RollBack.RollBackTests.YesFail" executed="True" success="True" time="0.002" asserts="11" />
                          <test-case name="Csla.Test.RollBack.RollBackTests.YesFailCancel" executed="True" success="True" time="0.002" asserts="13" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SafeDataReader" success="True" time="0.439" asserts="0">
                    <results>
                      <test-suite name="SafeDataReaderTests" success="True" time="0.438" asserts="0">
                        <results>
                          <test-case name="Csla.Test.SafeDataReader.SafeDataReaderTests.CloseSafeDataReader" executed="True" success="True" time="0.005" asserts="2" />
                          <test-case name="Csla.Test.SafeDataReader.SafeDataReaderTests.GetDataTypes" executed="True" success="True" time="0.217" asserts="8" />
                          <test-case name="Csla.Test.SafeDataReader.SafeDataReaderTests.GetSchemaTable" executed="True" success="True" time="0.149" asserts="3" />
                          <test-case name="Csla.Test.SafeDataReader.SafeDataReaderTests.IsDBNull" executed="True" success="True" time="0.004" asserts="2" />
                          <test-case name="Csla.Test.SafeDataReader.SafeDataReaderTests.TestFieldCount" executed="True" success="True" time="0.003" asserts="2" />
                          <test-case name="Csla.Test.SafeDataReader.SafeDataReaderTests.TestSafeDataReader" executed="True" success="True" time="0.006" asserts="7" />
                          <test-case name="Csla.Test.SafeDataReader.SafeDataReaderTests.ThrowSqlException" executed="True" success="True" time="0.045" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Serialization" success="True" time="21.821" asserts="0">
                    <results>
                      <test-suite name="SerializationTests" success="True" time="21.820" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Serialization.SerializationTests.AsyncLoadManagerSerializationTest" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.Clone" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.DCClone" executed="True" success="True" time="0.301" asserts="5" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.DCEditLevels" executed="True" success="True" time="0.027" asserts="3" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.SerializableEvents" executed="True" success="True" time="0.169" asserts="3" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.TestAuthorizationRulesAfterSerialization" executed="True" success="True" time="0.025" asserts="2" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.TestIndexAfterSerialization" executed="True" success="True" time="21.205" asserts="0" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.TestValidationRulesAfterSerialization" executed="True" success="True" time="0.073" asserts="0" />
                          <test-case name="Csla.Test.Serialization.SerializationTests.TestWithoutSerializableHandler" executed="True" success="True" time="0.002" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Silverlight" success="True" time="2.561" asserts="0">
                    <results>
                      <test-suite name="ApplicationContext" success="True" time="1.527" asserts="0">
                        <results>
                          <test-suite name="ClientContextTests" success="True" time="0.523" asserts="0">
                            <results>
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.ClientContextTests.ChangeInGlobalContextDoesNotAffectClientContext" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.ClientContextTests.ClientContextShouldBeEmptyInitialy" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.ClientContextTests.ClientContextShouldBeInitialized" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.ClientContextTests.ServerShouldReceiveClientContextValue" executed="True" success="True" time="0.519" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="GlobalContextTests" success="True" time="0.999" asserts="0">
                            <results>
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.GlobalContextTests.ChangeInClientContextDoesNotAffectGlobalContext" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.GlobalContextTests.GlobalContextOnClientShouldBeAffectedByChangeOnServer" executed="True" success="True" time="0.498" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.GlobalContextTests.GlobalContextShouldBeEmptyInitialy" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.GlobalContextTests.GlobalContextShouldBeInitialized" executed="True" success="True" time="0.001" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.ApplicationContext.GlobalContextTests.ServerShouldReceiveGlobalContextValue" executed="True" success="True" time="0.495" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="DataPortal" success="True" time="0.030" asserts="0">
                        <results>
                          <test-suite name="AuthorizeDataPortalTests" success="True" time="0.029" asserts="0">
                            <results>
                              <test-case name="Csla.Test.Silverlight.DataPortal.AuthorizeDataPortalTests.IAuthorizeDataPortal_Implementation_Allows_Creation" executed="True" success="True" time="0.005" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.DataPortal.AuthorizeDataPortalTests.IAuthorizeDataPortal_Implementation_Allows_Delete" executed="True" success="True" time="0.002" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.DataPortal.AuthorizeDataPortalTests.IAuthorizeDataPortal_Implementation_Allows_Fetch" executed="True" success="True" time="0.002" asserts="0" />
                              <test-case name="Csla.Test.Silverlight.DataPortal.AuthorizeDataPortalTests.IAuthorizeDataPortal_Implementation_Allows_Update" executed="True" success="True" time="0.017" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="PropertyGetSet" success="True" time="0.021" asserts="0">
                        <results>
                          <test-suite name="PropertGetSetTests" success="True" time="0.020" asserts="0">
                            <results>
                              <test-case name="Csla.Test.Silverlight.PropertyGetSet.PropertGetSetTests.ProperyInfoDeclaredInBaseClassShouldLoadInAnotherDomain" executed="True" success="True" time="0.020" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Security" success="True" time="0.977" asserts="0">
                        <results>
                          <test-suite name="SecurityTests" success="True" time="0.975" asserts="0">
                            <results>
                              <test-case name="Csla.Test.Silverlight.Security.SecurityTests.SetCSLAPrincipalLocal" executed="True" success="True" time="0.005" asserts="10" />
                              <test-case name="Csla.Test.Silverlight.Security.SecurityTests.SetInvalidMembershipPrincipal" executed="True" success="True" time="0.783" asserts="4" />
                              <test-case name="Csla.Test.Silverlight.Security.SecurityTests.SetMembershipPrincipalDataPortal" executed="True" success="True" time="0.181" asserts="4" />
                              <test-case name="Csla.Test.Silverlight.Security.SecurityTests.SetMembershipPrincipalWebServer" executed="True" success="True" time="0.001" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SmartDate" success="True" time="0.164" asserts="0">
                    <results>
                      <test-suite name="SmartDateTests" success="True" time="0.163" asserts="0">
                        <results>
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.Add" executed="True" success="True" time="0.041" asserts="2" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.Comparison" executed="True" success="True" time="0.003" asserts="22" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.ComparisonOperators" executed="True" success="True" time="0.003" asserts="17" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.Empty" executed="True" success="True" time="0.002" asserts="13" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.SerializationTest" executed="True" success="True" time="0.093" asserts="5" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.Subtract" executed="True" success="True" time="0.001" asserts="3" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.TestConverters" executed="True" success="True" time="0.005" asserts="23" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.TestSmartDateConstructors" executed="True" success="True" time="0.002" asserts="23" />
                          <test-case name="Csla.Test.SmartDate.SmartDateTests.TryParseTest" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SortedBindingList" success="True" time="0.083" asserts="0">
                    <results>
                      <test-suite name="SortedBindingListTests" success="True" time="0.082" asserts="0">
                        <results>
                          <test-case name="Csla.Test.SortedBindingList.SortedBindingListTests.AscendingSort" executed="True" success="True" time="0.039" asserts="10" />
                          <test-case name="Csla.Test.SortedBindingList.SortedBindingListTests.CopyTo" executed="True" success="True" time="0.004" asserts="4" />
                          <test-case name="Csla.Test.SortedBindingList.SortedBindingListTests.DescendingSort" executed="True" success="True" time="0.028" asserts="2" />
                          <test-case name="Csla.Test.SortedBindingList.SortedBindingListTests.IndexOf" executed="True" success="True" time="0.002" asserts="2" />
                          <test-case name="Csla.Test.SortedBindingList.SortedBindingListTests.SourceList" executed="True" success="True" time="0.001" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Threading" success="True" time="0.027" asserts="0">
                    <results>
                      <test-suite name="BusyLockTests" success="True" time="0.025" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Threading.BusyLockTests.SimpleLock" executed="True" success="True" time="0.012" asserts="1" />
                          <test-case name="Csla.Test.Threading.BusyLockTests.TestBusyLockObject" executed="True" success="True" time="0.001" asserts="1" />
                          <test-case name="Csla.Test.Threading.BusyLockTests.TestTimeout" executed="True" success="True" time="0.010" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Utilities" success="True" time="0.003" asserts="0">
                    <results>
                      <test-suite name="CoerseValueTests" success="True" time="0.001" asserts="0">
                        <results>
                          <test-case name="Csla.Test.Utilities.CoerseValueTests.TestCoerseValue" executed="True" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ValidationRules" success="True" time="1.878" asserts="0">
                    <results>
                      <test-suite name="AsyncRuleTests" success="True" time="1.658" asserts="0">
                        <results>
                          <test-case name="Csla.Test.ValidationRules.AsyncRuleTests.InvalidAsyncRule" executed="True" success="True" time="0.002" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.AsyncRuleTests.TestAsyncRuleError" executed="True" success="True" time="0.021" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.AsyncRuleTests.TestAsyncRulesValid" executed="True" success="True" time="0.024" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.AsyncRuleTests.ValidateMultipleObjectsSimultaneously" executed="True" success="True" time="1.589" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.AsyncRuleTests.VerifyIsValidAndIsSavableChangedWhenAsyncRuleCompletes" executed="True" success="True" time="0.013" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="PerTypeTests" success="True" time="0.022" asserts="0">
                        <results>
                          <test-case name="Csla.Test.ValidationRules.PerTypeTests.BadNonStaticRuleMethod" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.PerTypeTests.NoDoubleInit" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.PerTypeTests.OnlySharedRules" executed="True" success="True" time="0.005" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.PerTypeTests.StringRequired" executed="True" success="True" time="0.004" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="SeverityTests" success="True" time="0.008" asserts="0">
                        <results>
                          <test-case name="Csla.Test.ValidationRules.SeverityTests.AllThree" executed="True" success="True" time="0.005" asserts="9" />
                          <test-case name="Csla.Test.ValidationRules.SeverityTests.NoError" executed="True" success="True" time="0.002" asserts="7" />
                        </results>
                      </test-suite>
                      <test-suite name="ShortCircuitTests" success="True" time="0.010" asserts="0">
                        <results>
                          <test-case name="Csla.Test.ValidationRules.ShortCircuitTests.HigherThreshold" executed="True" success="True" time="0.005" asserts="6" />
                          <test-case name="Csla.Test.ValidationRules.ShortCircuitTests.ShortCircuitOnNew" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Csla.Test.ValidationRules.ShortCircuitTests.ShortCircuitOnPropertySet" executed="True" success="True" time="0.001" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="ValidationTests" success="True" time="0.163" asserts="0">
                        <results>
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.BreakLengthRule" executed="True" success="True" time="0.002" asserts="1" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.BreakLengthRuleAndClone" executed="True" success="True" time="0.004" asserts="1" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.BreakRequiredRule" executed="True" success="True" time="0.001" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.MergeBrokenRules" executed="True" success="True" time="0.003" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.RegExSSN" executed="True" success="True" time="0.006" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.TestValidationAfterEditCycle" executed="True" success="True" time="0.051" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.TestValidationRulesAfterClone" executed="True" success="True" time="0.074" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.TestValidationRulesWithPrivateMember" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.TestValidationRulesWithPublicProperty" executed="True" success="True" time="0.004" asserts="0" />
                          <test-case name="Csla.Test.ValidationRules.ValidationTests.VerifyUndoableStateStackOnClone" executed="True" success="True" time="0.004" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite name="cslalighttest" success="True" time="10.519" asserts="0">
            <results>
              <test-suite name="BusyStatus" success="True" time="10.063" asserts="0">
                <results>
                  <test-suite name="BusyStatusTests" success="True" time="10.061" asserts="0">
                    <results>
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.ListTestBusy" executed="True" success="True" time="0.007" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.ListTestNotBusy" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.ListTestSaveWhileBusy" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.ListTestSaveWhileBusyNetOnly" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.ListTestSaveWhileNotBusy" executed="True" success="True" time="2.005" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.ListTestSaveWhileNotBusyNetOnly" executed="True" success="True" time="2.003" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.ListTestSaveWhileNotBusyNoActiveRuleNetOnly" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.TestBusy" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.TestNotBusy" executed="True" success="True" time="2.002" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.TestSaveWhileBusy" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.TestSaveWhileBusyNetOnly" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.TestSaveWhileNotBusy" executed="True" success="True" time="2.002" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.TestSaveWhileNotBusyNetOnly" executed="True" success="True" time="2.001" asserts="0" />
                      <test-case name="cslalighttest.BusyStatus.BusyStatusTests.TestSaveWhileNotBusyNoActiveRuleNetOnly" executed="True" success="True" time="0.002" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="CommandBase" success="True" time="0.016" asserts="0">
                <results>
                  <test-suite name="CommandBaseTests" success="True" time="0.015" asserts="0">
                    <results>
                      <test-case name="cslalighttest.CommandBase.CommandBaseTests.Asynch_Remote_call_with_userState_passed_Results_parameters_passed_to_server_with_userState_and_noException" executed="True" success="True" time="0.004" asserts="0" />
                      <test-case name="cslalighttest.CommandBase.CommandBaseTests.Asynch_Remote_call_wo_userState_passed_Results_parameters_passed_to_server_and_noException" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.CommandBase.CommandBaseTests.Asynch_StaticPortal_call_with_userState_passed_Results_parameters_passed_to_server_with_userState_and_noException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.CommandBase.CommandBaseTests.Asynch_StaticPortal_call_wo_userState_passed_Results_parameters_passed_to_server_and_noException" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.CommandBase.CommandBaseTests.Synch_StaticPortal_call_Results_parameters_passed_to_server_and_noException" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="NameValueList" success="True" time="0.007" asserts="0">
                <results>
                  <test-suite name="NameValueListTests" success="True" time="0.005" asserts="0">
                    <results>
                      <test-case name="cslalighttest.NameValueList.NameValueListTests.TestNameValueList" executed="True" success="True" time="0.005" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="ReadOnly" success="True" time="0.020" asserts="0">
                <results>
                  <test-suite name="ReadOnlyTests" success="True" time="0.019" asserts="0">
                    <results>
                      <test-case name="cslalighttest.ReadOnly.ReadOnlyTests.AddItemToReadOnlyFail" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.ReadOnly.ReadOnlyTests.AddNewToReadOnlyFail" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.ReadOnly.ReadOnlyTests.ClearReadOnlyFail" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.ReadOnly.ReadOnlyTests.IndexInsertItemToReadOnlyFail" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="cslalighttest.ReadOnly.ReadOnlyTests.InsertItemToReadOnlyFail" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Serialization" success="True" time="0.225" asserts="0">
                <results>
                  <test-suite name="BindingListTests" success="True" time="0.014" asserts="0">
                    <results>
                      <test-case name="cslalighttest.Serialization.BindingListTests.VerifyAllowEdit" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="cslalighttest.Serialization.BindingListTests.VerifyAllowNew" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="cslalighttest.Serialization.BindingListTests.VerifyAllowRemove" executed="True" success="True" time="0.006" asserts="1" />
                      <test-case name="cslalighttest.Serialization.BindingListTests.VerifyRaiseListChangedEvents" executed="True" success="True" time="0.001" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="SerializationTests" success="True" time="0.138" asserts="0">
                    <results>
                      <test-case name="cslalighttest.Serialization.SerializationTests.BusinessObjectWithChildList" executed="True" success="True" time="0.030" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.BusinessObjectWithoutChildList" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.DeserializeCriteriaSuccess" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.MobileListEmptySerializationSuccess" executed="True" success="True" time="0.025" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.MobileListOfMobileObjectsSerializationSuccess" executed="True" success="True" time="0.006" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.MobileListOfNonMobileObjectsSerializationSuccess" executed="True" success="True" time="0.019" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.MobileListSerializationSuccess" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.MobileListWithNonBusinessObjectReferenceType" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.ReadOnlyBaseTest" executed="True" success="True" time="0.007" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.ReadOnlyListBaseTest" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.SerializeAndDeserializeReadOnly" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.SerializeCriteriaSuccess" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.SerializeMobileListWithPrimitiveTypes" executed="True" success="True" time="0.004" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.SerializeWithNullArgumentShouldNotThrowException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Serialization.SerializationTests.SerializeWithTextWriter" executed="True" success="True" time="0.010" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="UndoTests" success="True" time="0.060" asserts="0">
                    <results>
                      <test-case name="cslalighttest.Serialization.UndoTests.ApplyChildAfterRootUndo" executed="True" success="True" time="0.010" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.ApplyEditOnChildThenRoot" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.ApplyEditSuccess" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.ApplyEditWithChildSuccess" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.DoubleApply" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.EditUndoSuccess" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.InvalidApply" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.InvalidUndo" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.MultiEditUndoSuccess" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.UndoAfterApplyEditFail" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.UndoChildFail" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.UndoChildSuccess" executed="True" success="True" time="0.004" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.UndoParentThenChildEnsureNoEditLevelMismatch" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.UndoUninitializedValues" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.UndoWithChild" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Serialization.UndoTests.UndoWithDeleteAddToList" executed="True" success="True" time="0.008" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite name="Stereotypes" success="True" time="0.166" asserts="0">
                <results>
                  <test-suite name="EditableChildTestsLocal" success="True" time="0.077" asserts="0">
                    <results>
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.After_Saved_FetchedList_Items_should_contain_same_values_and_Marked_NotDirty" executed="True" success="True" time="0.028" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.After_Saved_FetchedList_should_contain_same_number_of_items" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.After_Saved_GrandChild_should_be_NotDirty_and_should_have_same_value_as_Fetched_GrandChild" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.FetchAll_Loads_GrandChildren_with_correct_Ids" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.FetchAll_Returns_all_3_Elements_and_does_not_throw_any_Exceptions" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.FetchAll_Returns_Elements_with_correctly_assigned_Ids" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.FetchByName_c2_Returns_Element_with_correct_Id_Marked_NotNew_and_NotDirty" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.FetchByName_c2_Returns_Element_with_one_GrandChild" executed="True" success="True" time="0.003" asserts="1" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.FetchByName_c2_Returns_one_Element_with_name_c2_and_correct_Id" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.FetchByName_INVALID_Returns_Empty_List" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.Save_on_EditableChild_Throws_NotSupportedException" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.Save_on_GrandChildList_Item_Throws_NotSupportedException" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsLocal.Save_on_GrandChildList_Throws_NotSupportedException" executed="True" success="True" time="0.002" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="EditableChildTestsRemote" success="True" time="0.043" asserts="0">
                    <results>
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.After_Saved_FetchedList_Items_should_contain_same_values_and_Marked_NotDirty" executed="True" success="True" time="0.006" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.After_Saved_FetchedList_should_contain_same_number_of_items" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.After_Saved_GrandChild_should_be_NotDirty_and_should_have_same_value_as_Fetched_GrandChild" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.FetchAll_Loads_GrandChildren_with_correct_Ids" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.FetchAll_Returns_all_3_Elements_and_does_not_throw_any_Exceptions" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.FetchAll_Returns_Elements_with_correctly_assigned_Ids" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.FetchByName_c2_Returns_Element_with_correct_Id_Marked_NotNew_and_NotDirty" executed="True" success="True" time="0.001" asserts="1" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.FetchByName_c2_Returns_Element_with_one_GrandChild" executed="True" success="True" time="0.002" asserts="1" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.FetchByName_c2_Returns_one_Element_with_name_c2_and_correct_Id" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.FetchByName_INVALID_Returns_Empty_List" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.Save_on_EditableChild_Throws_NotSupportedException" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.Save_on_GrandChildList_Item_Throws_NotSupportedException" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableChildTestsRemote.Save_on_GrandChildList_Throws_NotSupportedException" executed="True" success="True" time="0.002" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="EditableRootTests" success="True" time="0.026" asserts="0">
                    <results>
                      <test-case name="cslalighttest.Stereotypes.EditableRootTests.CanConstructTest" executed="True" success="True" time="0.001" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableRootTests.If_EditableRoot_IsDeleted_Then_Saved_Returns_New_Dirty_Instance_of_Root_That_is_no_longer_marked_Deleted" executed="True" success="True" time="0.005" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableRootTests.When_CreateNew_Returns_EditableRoot_Then_returned_object_is_Marked_New_Dirty_and_NotDeleted" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableRootTests.When_EditableRoot_is_Saved_Then_we_receive_an_object_back_that_is_Marked_as_NotNew_NotDirty" executed="True" success="True" time="0.002" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableRootTests.When_Fetching_EditableRoot_the_object_returned_ShouldNotBe_Marked_New_Deleted_or_Dirty" executed="True" success="True" time="0.003" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.EditableRootTests.When_New_EditableRoot_is_Saved_Then_returned_object_isMarked_NotNew_NotDirty" executed="True" success="True" time="0.002" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="ReadOnlyListTestsLocalAndRemote" success="True" time="0.011" asserts="0">
                    <results>
                      <test-case name="cslalighttest.Stereotypes.ReadOnlyListTestsLocalAndRemote.ReadOnlyListFetchLocal" executed="True" success="True" time="0.007" asserts="0" />
                      <test-case name="cslalighttest.Stereotypes.ReadOnlyListTestsLocalAndRemote.ReadOnlyListFetchRemote" executed="True" success="True" time="0.001" asserts="0" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>